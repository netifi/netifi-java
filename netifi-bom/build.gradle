/*
 * Copyright 2015-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
description = 'Bill of materials to make sure a consistent set of versions is used for Netifi-Java.'
apply plugin: 'maven-publish'

configurations.archives.artifacts.clear()

build.doLast {
    pom {
        customizePom(it, project)
    }
}

dependencies {
    compile project(':netifi-broker-auth')
    compile project(':netifi-broker-client')
    compile project(':netifi-broker-frames')
    compile project(':netifi-broker-info-idl')
    compile project(':netifi-broker-mgmt-idl')
    compile project(':netifi-common')
    compile project(':netifi-discovery')
    compile project(':netifi-discovery-aws')
    compile project(':netifi-discovery-consul')
    compile project(':netifi-discovery-kubernetes')
    compile project(':netifi-metrics-influx')
    compile project(':netifi-metrics-micrometer')
    compile project(':netifi-metrics-prometheus')
    compile project(':netifi-tracing-idl')
    compile project(':netifi-tracing-openzipkin')
    compile project(':netifi-vizceral-idl')
    compile project(':netifi-spring-core')
    compile project(':netifi-spring-boot-autoconfigure')
    compile project(':netifi-spring-boot-starter')
}

def customizePom(generatedPom, gradleProject) {
    //make sure that dependencies are under <dependencyManagement>
    generatedPom.withXml {
        if (generatedPom.generatedDependencies.size > 0) {
            asNode().appendNode('dependencyManagement', asNode().dependencies)
            asNode().dependencies.replaceNode {}
        }
    }

    generatedPom.project {
        name = 'Netifi-Java Release Train - BOM'
        description = gradleProject.description
        url = 'https://www.netifi.com'
        groupId = group
        packaging = "pom"
        organization {
            name = 'Netifi, Inc.'
            url = 'https://www.netifi.com'
        }
        licenses {
            license {
                name = 'The Apache License, Version 2.0'
                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }
        developers {
            developer {
                id = 'Support'
                name = 'Netifi Engineering'
                email = 'support@netifi.com'
            }
        }
        scm {
            connection = 'scm:git:git://github.com/netifi/netifi-java.git'
            developerConnection = 'scm:git:ssh://github.com/netifi/netifi-java.git'
            url = 'http://github.com/netifi/netifi-java/'
        }
        issueManagement {
            system = "GitHub Issues"
            url = "https://github.com/netifi/netifi-java/issues"
        }
    }

    generatedPom.writeTo("$buildDir/poms/netifi-bom-${version}.xml")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom.withXml {
                def sb = asString()
                sb.setLength 0
                sb.append  file( "$buildDir/poms/netifi-bom-${version}.xml" ).text
                println( sb.toString() )
            }
        }
    }
}

publish.dependsOn("build")
publishMavenJavaPublicationToMavenLocal.dependsOn("build")
publishToMavenLocal.dependsOn("build")